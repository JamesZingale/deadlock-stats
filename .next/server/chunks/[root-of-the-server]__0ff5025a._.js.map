{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/James/Documents/deadlock-stats/src/app/lib/db.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\r\n\r\nexport const db = mysql.createPool({\r\n  host: process.env.DB_HOST || '127.0.0.1',\r\n  user: process.env.DB_USER || 'root',\r\n  password: process.env.DB_PASSWORD || 'root1',\r\n  database: process.env.DB_NAME || 'deadlock_stats',\r\n  port: Number(process.env.DB_PORT) || 3306\r\n});"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,KAAK,8IAAK,CAAC,UAAU,CAAC;IACjC,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,MAAM,OAAO,QAAQ,GAAG,CAAC,OAAO,KAAK;AACvC","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/James/Documents/deadlock-stats/src/app/api/fetch-matches/route.ts"],"sourcesContent":["// app/api/fetch-matches/route.ts\r\nimport { db } from '../../lib/db';\r\n\r\nconst DEADLOCK_API_BASE = 'https://api.deadlock-api.com/v1/sql';\r\n\r\nexport async function GET() {\r\n  try {\r\n    // Example: fetch a single match for now\r\n    const matchId = 45125446;\r\n    const query = encodeURIComponent(\r\n      `SELECT match_id, start_time, duration_s, match_outcome, match_mode, winning_team FROM match_info WHERE match_id = ${matchId}`\r\n    );\r\n\r\n    const url = `${DEADLOCK_API_BASE}?query=${query}`;\r\n    console.log('Fetching:', url);\r\n\r\n    const res = await fetch(url);\r\n    if (!res.ok) {\r\n      console.error('Match fetch failed:', res.status, await res.text());\r\n      throw new Error('Failed to fetch match');\r\n    }\r\n\r\n    const matches = await res.json();\r\n    console.log('Fetched matches:', matches);\r\n\r\n    for (const match of matches) {\r\n      await db.query(\r\n        `INSERT INTO Matches (match_id, start_time, duration_s, match_outcome, match_mode, winning_team)\r\n         VALUES (?, ?, ?, ?, ?, ?)\r\n         ON DUPLICATE KEY UPDATE\r\n           start_time = VALUES(start_time),\r\n           duration_s = VALUES(duration_s),\r\n           match_outcome = VALUES(match_outcome),\r\n           match_mode = VALUES(match_mode),\r\n           winning_team = VALUES(winning_team)`,\r\n        [match.match_id, match.start_time, match.duration_s, match.match_outcome, match.match_mode, match.winning_team]\r\n      );\r\n    }\r\n\r\n    return new Response(JSON.stringify({ success: true, matches }), { status: 200 });\r\n  } catch (err: any) {\r\n    console.error(err);\r\n    return new Response(JSON.stringify({ success: false, error: err.message }), { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AACjC;;AAEA,MAAM,oBAAoB;AAEnB,eAAe;IACpB,IAAI;QACF,wCAAwC;QACxC,MAAM,UAAU;QAChB,MAAM,QAAQ,mBACZ,CAAC,kHAAkH,EAAE,SAAS;QAGhI,MAAM,MAAM,GAAG,kBAAkB,OAAO,EAAE,OAAO;QACjD,QAAQ,GAAG,CAAC,aAAa;QAEzB,MAAM,MAAM,MAAM,MAAM;QACxB,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,QAAQ,KAAK,CAAC,uBAAuB,IAAI,MAAM,EAAE,MAAM,IAAI,IAAI;YAC/D,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,UAAU,MAAM,IAAI,IAAI;QAC9B,QAAQ,GAAG,CAAC,oBAAoB;QAEhC,KAAK,MAAM,SAAS,QAAS;YAC3B,MAAM,+HAAE,CAAC,KAAK,CACZ,CAAC;;;;;;;8CAOqC,CAAC,EACvC;gBAAC,MAAM,QAAQ;gBAAE,MAAM,UAAU;gBAAE,MAAM,UAAU;gBAAE,MAAM,aAAa;gBAAE,MAAM,UAAU;gBAAE,MAAM,YAAY;aAAC;QAEnH;QAEA,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;YAAM;QAAQ,IAAI;YAAE,QAAQ;QAAI;IAChF,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC;QACd,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;YAAO,OAAO,IAAI,OAAO;QAAC,IAAI;YAAE,QAAQ;QAAI;IAC5F;AACF","debugId":null}}]
}