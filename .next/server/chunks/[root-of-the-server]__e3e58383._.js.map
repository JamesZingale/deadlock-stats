{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/James/Documents/deadlock-stats/src/app/lib/db.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\r\n\r\nexport const db = mysql.createPool({\r\n  host: process.env.DB_HOST || '127.0.0.1',\r\n  user: process.env.DB_USER || 'root',\r\n  password: process.env.DB_PASSWORD || 'root1',\r\n  database: process.env.DB_NAME || 'deadlock_stats',\r\n  port: Number(process.env.DB_PORT) || 3306\r\n});"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,KAAK,8IAAK,CAAC,UAAU,CAAC;IACjC,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,MAAM,OAAO,QAAQ,GAAG,CAAC,OAAO,KAAK;AACvC","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/James/Documents/deadlock-stats/src/app/api/fetch-players/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { db } from '../../lib/db';\r\n\r\nconst DEADLOCK_API_BASE = 'https://api.deadlock-api.com/v1';\r\n\r\nexport async function GET() {\r\n  try {\r\n    const accountId = 920226910;\r\n    console.log(`Fetching hero stats for account ${accountId}`);\r\n\r\n    // Step 1: Fetch hero stats\r\n    const heroStatsRes = await fetch(\r\n      `${DEADLOCK_API_BASE}/players/hero-stats?account_ids=${accountId}&hero_ids=null&min_unix_timestamp=null&max_unix_timestamp=null&min_duration_s=null&max_duration_s=null&min_networth=null&max_networth=null&min_average_badge=null&max_average_badge=null&min_match_id=null&max_match_id=null`\r\n    );\r\n\r\n    if (!heroStatsRes.ok) {\r\n      console.error('Hero stats fetch failed:', heroStatsRes.status, await heroStatsRes.text());\r\n      throw new Error('Failed to fetch hero stats');\r\n    }\r\n\r\n    const heroStats = await heroStatsRes.json();\r\n\r\n    // Step 2: Fetch Steam profile for username\r\n    const steamRes = await fetch(`${DEADLOCK_API_BASE}/players/steam?account_ids=${accountId}`);\r\n    if (!steamRes.ok) throw new Error('Failed to fetch Steam profile');\r\n    const steamProfiles = await steamRes.json();\r\n\r\n    // Step 3: Aggregate totals\r\n    const statsForPlayer = heroStats.filter((s: any) => s.account_id === accountId);\r\n    if (statsForPlayer.length === 0) throw new Error('No hero stats found for player');\r\n\r\n    const totalMatches = statsForPlayer.reduce((sum, s) => sum + (s.matches_played || 0), 0);\r\n    const totalWins = statsForPlayer.reduce((sum, s) => sum + (s.wins || 0), 0);\r\n    const totalLosses = totalMatches - totalWins;\r\n    const username = steamProfiles[0]?.personaname || 'Unknown';\r\n\r\n    console.log({ accountId, username, totalMatches, totalWins, totalLosses });\r\n\r\n    // Step 4: Insert or update\r\n    await db.query(\r\n      `INSERT INTO Players (player_id, username, total_matches_played, total_wins, total_losses)\r\n       VALUES (?, ?, ?, ?, ?)\r\n       ON DUPLICATE KEY UPDATE \r\n         username = VALUES(username),\r\n         total_matches_played = VALUES(total_matches_played),\r\n         total_wins = VALUES(total_wins),\r\n         total_losses = VALUES(total_losses)`,\r\n      [accountId, username, totalMatches, totalWins, totalLosses]\r\n    );\r\n\r\n    return NextResponse.json({ success: true, accountId, username, totalMatches, totalWins, totalLosses });\r\n  } catch (err: any) {\r\n    console.error(err);\r\n    return NextResponse.json({ success: false, error: err.message });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,oBAAoB;AAEnB,eAAe;IACpB,IAAI;QACF,MAAM,YAAY;QAClB,QAAQ,GAAG,CAAC,CAAC,gCAAgC,EAAE,WAAW;QAE1D,2BAA2B;QAC3B,MAAM,eAAe,MAAM,MACzB,GAAG,kBAAkB,gCAAgC,EAAE,UAAU,4NAA4N,CAAC;QAGhS,IAAI,CAAC,aAAa,EAAE,EAAE;YACpB,QAAQ,KAAK,CAAC,4BAA4B,aAAa,MAAM,EAAE,MAAM,aAAa,IAAI;YACtF,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,YAAY,MAAM,aAAa,IAAI;QAEzC,2CAA2C;QAC3C,MAAM,WAAW,MAAM,MAAM,GAAG,kBAAkB,2BAA2B,EAAE,WAAW;QAC1F,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;QAClC,MAAM,gBAAgB,MAAM,SAAS,IAAI;QAEzC,2BAA2B;QAC3B,MAAM,iBAAiB,UAAU,MAAM,CAAC,CAAC,IAAW,EAAE,UAAU,KAAK;QACrE,IAAI,eAAe,MAAM,KAAK,GAAG,MAAM,IAAI,MAAM;QAEjD,MAAM,eAAe,eAAe,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,CAAC,EAAE,cAAc,IAAI,CAAC,GAAG;QACtF,MAAM,YAAY,eAAe,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG;QACzE,MAAM,cAAc,eAAe;QACnC,MAAM,WAAW,aAAa,CAAC,EAAE,EAAE,eAAe;QAElD,QAAQ,GAAG,CAAC;YAAE;YAAW;YAAU;YAAc;YAAW;QAAY;QAExE,2BAA2B;QAC3B,MAAM,+HAAE,CAAC,KAAK,CACZ,CAAC;;;;;;4CAMqC,CAAC,EACvC;YAAC;YAAW;YAAU;YAAc;YAAW;SAAY;QAG7D,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;YAAW;YAAU;YAAc;YAAW;QAAY;IACtG,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC;QACd,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO,IAAI,OAAO;QAAC;IAChE;AACF","debugId":null}}]
}