{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/James/Documents/deadlock-stats/src/app/player/%5BplayerId%5D/page.tsx"],"sourcesContent":["// app/player/[id]/page.tsx\r\nimport { db } from '../lib/db';\r\nimport { RowDataPacket } from 'mysql2/promise';\r\n\r\ninterface Player {\r\n  username: string;\r\n  total_matches_played: number;\r\n  total_wins: number;\r\n  total_losses: number;\r\n}\r\n\r\ninterface Match {\r\n  match_id: number;\r\n  hero_id: number;\r\n  kills: number;\r\n  deaths: number;\r\n  assists: number;\r\n  damage_done: number;\r\n  healing_done: number;\r\n  match_mode: string;\r\n  winning_team: string;\r\n}\r\n\r\ninterface PlayerPageProps {\r\n  params: { playerId: string };\r\n}\r\n\r\nexport default async function PlayerPage({ params }: PlayerPageProps) {\r\n  const playerId = Number(params.playerId);\r\n\r\n  const [playerRows] = await db.query<Player & RowDataPacket[]>(\r\n    `SELECT username, total_matches_played, total_wins, total_losses\r\n     FROM Players\r\n     WHERE player_id = ?`,\r\n    [playerId]\r\n  );\r\n  const player = playerRows[0];\r\n\r\n  if (!player) return <p>Player not found</p>;\r\n\r\n  const [matchesRows] = await db.query<Match & RowDataPacket[]>(\r\n    `SELECT pm.match_id, pm.hero_id, pm.kills, pm.deaths, pm.assists, pm.damage_done, pm.healing_done,\r\n            m.match_mode, m.winning_team\r\n     FROM PlayerMatchStats pm\r\n     JOIN Matches m ON pm.match_id = m.match_id\r\n     WHERE pm.player_id = ?\r\n     ORDER BY m.start_time DESC\r\n     LIMIT 20`,\r\n    [playerId]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>{player.username}</h1>\r\n      <p>Total Matches: {player.total_matches_played}</p>\r\n      <p>Total Wins: {player.total_wins}</p>\r\n      <p>Total Losses: {player.total_losses}</p>\r\n      <h2>Recent Matches</h2>\r\n      <ul>\r\n        {matchesRows.map((match) => (\r\n          <li key={match.match_id}>\r\n            Match {match.match_id}: K/D/A {match.kills}/{match.deaths}/{match.assists}, Damage {match.damage_done}, Healing {match.healing_done}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;;;;;;;;AA2BZ,eAAe,WAAW,EAAE,MAAM,EAAmB;IAClE,MAAM,WAAW,OAAO,OAAO,QAAQ;IAEvC,MAAM,CAAC,WAAW,GAAG,MAAM,GAAG,KAAK,CACjC,CAAC;;wBAEmB,CAAC,EACrB;QAAC;KAAS;IAEZ,MAAM,SAAS,UAAU,CAAC,EAAE;IAE5B,IAAI,CAAC,QAAQ,qBAAO,8OAAC;kBAAE;;;;;;IAEvB,MAAM,CAAC,YAAY,GAAG,MAAM,GAAG,KAAK,CAClC,CAAC;;;;;;aAMQ,CAAC,EACV;QAAC;KAAS;IAGZ,qBACE,8OAAC;;0BACC,8OAAC;0BAAI,OAAO,QAAQ;;;;;;0BACpB,8OAAC;;oBAAE;oBAAgB,OAAO,oBAAoB;;;;;;;0BAC9C,8OAAC;;oBAAE;oBAAa,OAAO,UAAU;;;;;;;0BACjC,8OAAC;;oBAAE;oBAAe,OAAO,YAAY;;;;;;;0BACrC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;0BACE,YAAY,GAAG,CAAC,CAAC,sBAChB,8OAAC;;4BAAwB;4BAChB,MAAM,QAAQ;4BAAC;4BAAS,MAAM,KAAK;4BAAC;4BAAE,MAAM,MAAM;4BAAC;4BAAE,MAAM,OAAO;4BAAC;4BAAU,MAAM,WAAW;4BAAC;4BAAW,MAAM,YAAY;;uBAD5H,MAAM,QAAQ;;;;;;;;;;;;;;;;AAOjC","debugId":null}}]
}